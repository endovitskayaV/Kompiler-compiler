 ── program 
    └── class Program
        ├── fun enterArr(arr:Array<Int> index:0, sortType:String index:1) :Unit
        │   ├── println( )
        │   │   └── concat( ) type:String
        │   │       ├── "Enter  array (10 numbers)\nArray sort:" type:String const "Enter  array (10 numbers)\nArray sort:"
        │   │       └── sortType type:String index:1 arg
        │   ├── =
        │   │   ├── var i type:Int index:0
        │   │   └── 0 type:Int const 0
        │   └── while
        │       ├── < type:Boolean
        │       │   ├── i type:Int index:0 local
        │       │   └── 10 type:Int const 10
        │       ├── =
        │       │   ├── [ ] type:Int
        │       │   │   ├── arr type:Array<Int> index:0 arg
        │       │   │   └── i type:Int index:0 local
        │       │   └── readlnInt( ) type:Int
        │       └── =
        │           ├── i type:Int index:0 local
        │           └── + type:Int
        │               ├── i type:Int index:0 local
        │               └── 1 type:Int const 1
        ├── fun printResult(arr:Array<Int> index:0) :Unit
        │   ├── println( )
        │   │   └── "Result" type:String const "Result"
        │   └── for
        │       ├── variable type:Int index:0 local
        │       ├── arr type:Array<Int> index:0 arg
        │       ├── print( )
        │       │   └── variable type:Int index:0 local
        │       └── println( )
        │           └── " " type:String const " "
        ├── fun main(args:Array<String> index:0) :Unit
        │   ├── =
        │   │   ├── var arr type:Array<Int> index:0
        │   │   └──  type:Array<Int>
        │   │       └── 10 type:Int const 10
        │   ├── enterArr( )
        │   │   ├── arr type:Array<Int> index:0 local
        │   │   └── "bubble" type:String const "bubble"
        │   ├── bubleSort( )
        │   │   └── arr type:Array<Int> index:0 local
        │   ├── printResult( )
        │   │   └── arr type:Array<Int> index:0 local
        │   ├── enterArr( )
        │   │   ├── arr type:Array<Int> index:0 local
        │   │   └── "quick" type:String const "quick"
        │   ├── quickSort( )
        │   │   ├── arr type:Array<Int> index:0 local
        │   │   ├── 0 type:Int const 0
        │   │   └── - type:Int
        │   │       ├── size( ) type:Int
        │   │       │   └── arr type:Array<Int> index:0 local
        │   │       └── 1 type:Int const 1
        │   ├── printResult( )
        │   │   └── arr type:Array<Int> index:0 local
        │   ├── println( )
        │   │   └── "" type:String const ""
        │   └── readKey( )
        ├── fun bubleSort(arr:Array<Int> index:0) :Unit
        │   ├── =
        │   │   ├── var i type:Int index:0
        │   │   └── - type:Int
        │   │       ├── size( ) type:Int
        │   │       │   └── arr type:Array<Int> index:0 arg
        │   │       └── 1 type:Int const 1
        │   ├── =
        │   │   ├── var j type:Int index:1
        │   │   └── 0 type:Int const 0
        │   └── while
        │       ├── > type:Boolean
        │       │   ├── i type:Int index:0 local
        │       │   └── 0 type:Int const 0
        │       ├── while
        │       │   ├── < type:Boolean
        │       │   │   ├── j type:Int index:1 local
        │       │   │   └── i type:Int index:0 local
        │       │   ├── if
        │       │   │   ├── > type:Boolean
        │       │   │   │   ├── [ ] type:Int
        │       │   │   │   │   ├── arr type:Array<Int> index:0 arg
        │       │   │   │   │   └── j type:Int index:1 local
        │       │   │   │   └── [ ] type:Int
        │       │   │   │       ├── arr type:Array<Int> index:0 arg
        │       │   │   │       └── + type:Int
        │       │   │   │           ├── j type:Int index:1 local
        │       │   │   │           └── 1 type:Int const 1
        │       │   │   └── then
        │       │   │       ├── =
        │       │   │       │   ├── var tmp type:Int index:2
        │       │   │       │   └── [ ] type:Int
        │       │   │       │       ├── arr type:Array<Int> index:0 arg
        │       │   │       │       └── j type:Int index:1 local
        │       │   │       ├── =
        │       │   │       │   ├── [ ] type:Int
        │       │   │       │   │   ├── arr type:Array<Int> index:0 arg
        │       │   │       │   │   └── j type:Int index:1 local
        │       │   │       │   └── [ ] type:Int
        │       │   │       │       ├── arr type:Array<Int> index:0 arg
        │       │   │       │       └── + type:Int
        │       │   │       │           ├── j type:Int index:1 local
        │       │   │       │           └── 1 type:Int const 1
        │       │   │       └── =
        │       │   │           ├── [ ] type:Int
        │       │   │           │   ├── arr type:Array<Int> index:0 arg
        │       │   │           │   └── + type:Int
        │       │   │           │       ├── j type:Int index:1 local
        │       │   │           │       └── 1 type:Int const 1
        │       │   │           └── tmp type:Int index:2 local
        │       │   └── =
        │       │       ├── j type:Int index:1 local
        │       │       └── + type:Int
        │       │           ├── j type:Int index:1 local
        │       │           └── 1 type:Int const 1
        │       ├── =
        │       │   ├── j type:Int index:1 local
        │       │   └── 0 type:Int const 0
        │       └── =
        │           ├── i type:Int index:0 local
        │           └── - type:Int
        │               ├── i type:Int index:0 local
        │               └── 1 type:Int const 1
        └── fun quickSort(mass:Array<Int> index:0, low:Int index:1, high:Int index:2) :Unit
            └── if
                ├── != type:Boolean
                │   ├── size( ) type:Int
                │   │   └── mass type:Array<Int> index:0 arg
                │   └── 0 type:Int const 0
                └── then
                    └── if
                        ├── < type:Boolean
                        │   ├── low type:Int index:1 arg
                        │   └── high type:Int index:2 arg
                        └── then
                            ├── =
                            │   ├── var middle type:Int index:0
                            │   └── + type:Int
                            │       ├── low type:Int index:1 arg
                            │       └── / type:Int
                            │           ├── - type:Int
                            │           │   ├── high type:Int index:2 arg
                            │           │   └── low type:Int index:1 arg
                            │           └── 2 type:Int const 2
                            ├── =
                            │   ├── var opora type:Int index:1
                            │   └── [ ] type:Int
                            │       ├── mass type:Array<Int> index:0 arg
                            │       └── middle type:Int index:0 local
                            ├── =
                            │   ├── var i type:Int index:2
                            │   └── low type:Int index:1 arg
                            ├── =
                            │   ├── var j type:Int index:3
                            │   └── high type:Int index:2 arg
                            ├── while
                            │   ├── <= type:Boolean
                            │   │   ├── i type:Int index:2 local
                            │   │   └── j type:Int index:3 local
                            │   ├── while
                            │   │   ├── < type:Boolean
                            │   │   │   ├── [ ] type:Int
                            │   │   │   │   ├── mass type:Array<Int> index:0 arg
                            │   │   │   │   └── i type:Int index:2 local
                            │   │   │   └── opora type:Int index:1 local
                            │   │   └── =
                            │   │       ├── i type:Int index:2 local
                            │   │       └── + type:Int
                            │   │           ├── i type:Int index:2 local
                            │   │           └── 1 type:Int const 1
                            │   ├── while
                            │   │   ├── > type:Boolean
                            │   │   │   ├── [ ] type:Int
                            │   │   │   │   ├── mass type:Array<Int> index:0 arg
                            │   │   │   │   └── j type:Int index:3 local
                            │   │   │   └── opora type:Int index:1 local
                            │   │   └── =
                            │   │       ├── j type:Int index:3 local
                            │   │       └── - type:Int
                            │   │           ├── j type:Int index:3 local
                            │   │           └── 1 type:Int const 1
                            │   └── if
                            │       ├── <= type:Boolean
                            │       │   ├── i type:Int index:2 local
                            │       │   └── j type:Int index:3 local
                            │       └── then
                            │           ├── =
                            │           │   ├── var temp type:Int index:4
                            │           │   └── [ ] type:Int
                            │           │       ├── mass type:Array<Int> index:0 arg
                            │           │       └── i type:Int index:2 local
                            │           ├── =
                            │           │   ├── [ ] type:Int
                            │           │   │   ├── mass type:Array<Int> index:0 arg
                            │           │   │   └── i type:Int index:2 local
                            │           │   └── [ ] type:Int
                            │           │       ├── mass type:Array<Int> index:0 arg
                            │           │       └── j type:Int index:3 local
                            │           ├── =
                            │           │   ├── [ ] type:Int
                            │           │   │   ├── mass type:Array<Int> index:0 arg
                            │           │   │   └── j type:Int index:3 local
                            │           │   └── temp type:Int index:4 local
                            │           ├── =
                            │           │   ├── i type:Int index:2 local
                            │           │   └── + type:Int
                            │           │       ├── i type:Int index:2 local
                            │           │       └── 1 type:Int const 1
                            │           └── =
                            │               ├── j type:Int index:3 local
                            │               └── - type:Int
                            │                   ├── j type:Int index:3 local
                            │                   └── 1 type:Int const 1
                            ├── if
                            │   ├── < type:Boolean
                            │   │   ├── low type:Int index:1 arg
                            │   │   └── j type:Int index:3 local
                            │   └── then
                            │       └── quickSort( )
                            │           ├── mass type:Array<Int> index:0 arg
                            │           ├── low type:Int index:1 arg
                            │           └── j type:Int index:3 local
                            └── if
                                ├── > type:Boolean
                                │   ├── high type:Int index:2 arg
                                │   └── i type:Int index:2 local
                                └── then
                                    └── quickSort( )
                                        ├── mass type:Array<Int> index:0 arg
                                        ├── i type:Int index:2 local
                                        └── high type:Int index:2 arg
